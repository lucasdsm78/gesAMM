<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABlAJcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        /KKKKACimSmvHfjd+3R8N/gFLLa6prUd7qUR2tY6eBcTIf7rYOFPsTkenNdGFwlfE1PZYeDlLsk2zlxe
        MoYWn7XEzUI920l+J7LRXw34g/4LS6Xb3rrpngG/vIFOA9zqy2rN/wAB8p/bvVW2/wCC1kZnT7R8N5o4
        D95015HcfRTCM/nX0keBc8krrDv5ygn9zlf8D5WfiFw/GXK8QvlGbX38tvxPu6ivmb4Pf8FUfhn8S9R+
        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
        AUUUUAFFFFABRRRQAUUUUAFFFFABRRRQB//Z
</value>
  </data>
</root>